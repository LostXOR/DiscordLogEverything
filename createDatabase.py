import os, sqlite3, globalVars

def createDatabase(databasePath):
    # Open database file
    if os.path.dirname(databasePath): os.makedirs(os.path.dirname(databasePath), exist_ok = True)
    # Open database with isolation_level = None so db.commit() isn't needed
    db = sqlite3.connect(databasePath, isolation_level = None)
    cursor = db.cursor()

    # Yes this is repetitive, but it's just un-repetitive enough to be very difficult to simplify.
    # Create tables for data types if they don't exist already
    cursor.execute("CREATE TABLE IF NOT EXISTS Guild(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, owner_id, created_at, joined_at, description, member_count, online_count, channels, members, categories)")
    cursor.execute("CREATE TABLE IF NOT EXISTS TextChannel(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, guild_id, category_id, topic, position)")
    cursor.execute("CREATE TABLE IF NOT EXISTS VoiceChannel(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, guild_id, category_id, bitrate, position)")
    cursor.execute("CREATE TABLE IF NOT EXISTS StageChannel(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, guild_id, category_id, bitrate, position)")
    cursor.execute("CREATE TABLE IF NOT EXISTS ForumChannel(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, guild_id, category_id, position)")
    cursor.execute("CREATE TABLE IF NOT EXISTS CategoryChannel(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, guild_id, position, channels)")
    cursor.execute("CREATE TABLE IF NOT EXISTS Member(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, discriminator)")
    cursor.execute("CREATE TABLE IF NOT EXISTS User(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, discriminator)")
    cursor.execute("CREATE TABLE IF NOT EXISTS ClientUser(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, discriminator)")
    cursor.execute("CREATE TABLE IF NOT EXISTS Message(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, content, channel_id, author_id, attachments)")
    cursor.execute("CREATE TABLE IF NOT EXISTS Asset(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, key, url)")
    cursor.execute("CREATE TABLE IF NOT EXISTS Attachment(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, url, proxy_url, size, filename)")
    cursor.execute("CREATE TABLE IF NOT EXISTS UserSettings(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, locale)")
    cursor.execute("CREATE TABLE IF NOT EXISTS Emoji(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, guild_id, url)")
    cursor.execute("CREATE TABLE IF NOT EXISTS Role(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, position, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS Thread(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, member_count, owner_id, parent_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS ThreadMember(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, thread_id, joined_at)")
    cursor.execute("CREATE TABLE IF NOT EXISTS Relationship(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, user_id, nick)")
    cursor.execute("CREATE TABLE IF NOT EXISTS ScheduledEvent(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, name, description, start_time, end_time)")
    cursor.execute("CREATE TABLE IF NOT EXISTS Payment(uuid PRIMARY KEY, timestamp, deleted, event_uuid, id, currency, sku_price)")

    # Create tables for events if they don't exist already
    cursor.execute("CREATE TABLE IF NOT EXISTS EventMessage(uuid PRIMARY KEY, timestamp, message_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventMessageEdit(uuid PRIMARY KEY, timestamp, message_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventMessageDelete(uuid PRIMARY KEY, timestamp, message_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventBulkMessageDelete(uuid PRIMARY KEY, timestamp, message_ids)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventReactionAdd(uuid PRIMARY KEY, timestamp, emoji_id, message_id, user_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventReactionRemove(uuid PRIMARY KEY, timestamp, emoji_id, message_id, user_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventReactionClear(uuid PRIMARY KEY, timestamp, message_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventReactionClearEmoji(uuid PRIMARY KEY, timestamp, emoji_id, message_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildChannelDelete(uuid PRIMARY KEY, timestamp, channel_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildChannelCreate(uuid PRIMARY KEY, timestamp, channel_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildChannelUpdate(uuid PRIMARY KEY, timestamp, channel_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventPrivateChannelDelete(uuid PRIMARY KEY, timestamp, channel_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventPrivateChannelCreate(uuid PRIMARY KEY, timestamp, channel_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventPrivateChannelUpdate(uuid PRIMARY KEY, timestamp, channel_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildChannelPinsUpdate(uuid PRIMARY KEY, timestamp, channel_id, last_pin)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventPrivateChannelPinsUpdate(uuid PRIMARY KEY, timestamp, channel_id, last_pin)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventTyping(uuid PRIMARY KEY, timestamp, user_id, channel_id, time)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGroupJoin(uuid PRIMARY KEY, timestamp, user_id, channel_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGroupRemove(uuid PRIMARY KEY, timestamp, user_id, channel_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildJoin(uuid PRIMARY KEY, timestamp, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildRemove(uuid PRIMARY KEY, timestamp, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildUpdate(uuid PRIMARY KEY, timestamp, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventPresenceUpdate(uuid PRIMARY KEY, timestamp, user_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventSettingsUpdate(uuid PRIMARY KEY, timestamp)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildSettingsUpdate(uuid PRIMARY KEY, timestamp, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildAvailable(uuid PRIMARY KEY, timestamp, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildUnavailable(uuid PRIMARY KEY, timestamp, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildEmojisUpdate(uuid PRIMARY KEY, timestamp, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventMemberJoin(uuid PRIMARY KEY, timestamp, member_id, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventMemberRemove(uuid PRIMARY KEY, timestamp, member_id, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventMemberUpdate(uuid PRIMARY KEY, timestamp, member_id, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventUserUpdate(uuid PRIMARY KEY, timestamp, user_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildRoleCreate(uuid PRIMARY KEY, timestamp, role_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildRoleDelete(uuid PRIMARY KEY, timestamp, role_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventGuildRoleUpdate(uuid PRIMARY KEY, timestamp, role_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventThreadCreate(uuid PRIMARY KEY, timestamp, thread_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventThreadJoin(uuid PRIMARY KEY, timestamp, thread_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventThreadUpdate(uuid PRIMARY KEY, timestamp, thread_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventThreadRemove(uuid PRIMARY KEY, timestamp, thread_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventThreadDelete(uuid PRIMARY KEY, timestamp, thread_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventThreadMemberJoin(uuid PRIMARY KEY, timestamp, member_id, thread_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventThreadMemberRemove(uuid PRIMARY KEY, timestamp, member_id, thread_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventRelationshipAdd(uuid PRIMARY KEY, timestamp, member_id, thread_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventRelationshipRemove(uuid PRIMARY KEY, timestamp, relationship_id, user_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventRelationshipUpdate(uuid PRIMARY KEY, timestamp, relationship_id, user_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventConnectionsUpdate(uuid PRIMARY KEY, timestamp)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventConnectionUpdate(uuid PRIMARY KEY, timestamp, url, show_activity, revoked)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventConnectionCreate(uuid PRIMARY KEY, timestamp, url, show_activity, revoked)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventConnectionsLinkCallback(uuid PRIMARY KEY, timestamp, provider, code, state)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventScheduledEventCreate(uuid PRIMARY KEY, timestamp, event_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventScheduledEventDelete(uuid PRIMARY KEY, timestamp, event_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventScheduledEventUpdate(uuid PRIMARY KEY, timestamp, event_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventScheduledEventUserAdd(uuid PRIMARY KEY, timestamp, user_id, event_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventScheduledEventUserRemove(uuid PRIMARY KEY, timestamp, user_id, event_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventMemberBan(uuid PRIMARY KEY, timestamp, user_id, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventMemberUnban(uuid PRIMARY KEY, timestamp, user_id, guild_id)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventRequiredActionUpdate(uuid PRIMARY KEY, timestamp, action)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventPaymentSourcesUpdate(uuid PRIMARY KEY, timestamp)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventSubscriptionsUpdate(uuid PRIMARY KEY, timestamp)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventPaymentClientAdd(uuid PRIMARY KEY, timestamp, purchase_token_hash, expires_at)")
    cursor.execute("CREATE TABLE IF NOT EXISTS EventPaymentUpdate(uuid PRIMARY KEY, timestamp, payment_id)")

    return cursor